# jemdoc: menu{MENU}{menu.html}
\n 

= Project Work



== Android Jetpack Compose Weather Forecasting Android Application - 18 April 2023

~~~
{}{img_left}{./figures/WthApp_city.jpg}{alt text}{750px}{400px}{}
*Real-time Weather ForeCasting*\n 
*(April - 2023)* \n
~~~

~~~
{}{img_left}{./figures/WthApp_About.jpg}{alt text}{250px}{400px}{}
*A Comprehensive Weather ForeCasting Android Application using modern Jetpack Compose with Kotlin*\n 
*(April - 2023)* \n
- Weather API from openweathermap.org
- Integration of Weather API with the Application 
- *Android Retrofit* to connect the API with the Application in order to parse JSON files.
- *Android ROOM* library to store favourite cities data and settings configuration data in MySQL tables.
- Complete high quality well documented code.
- Complete UML class diagrams.
~~~

~~~
{}{img_left}{./figures/WthApp_sett.jpg}{alt text}{500px}{400px}{}
*A Settings Screen*\n 
- Allows to follow two Units of Measurements 
- Metric System OR Imperial System
- Metric System follows Degree Centigrade, on the other hand Imperial System follows Degree Fehrenheit 

*A Favorite Screen*\n 
- Allows to store the favorite cities 
- These cities alongwith their country names are stored in the database
- *ROOM library* is used for database integration 
~~~



== Android Jetpack Compose Social Media Application - Reddit - March 2023

~~~
{}{img_left}{./figures/JetRed_home.jpg}{alt text}{250px}{400px}{}
*A Comprehensive Social Media Application (Similer to Reddit*\n 
*(March - 2023)* \n
- Home Reddit Screen.
- Multiple Sub-Reddit Screens 
- *Chat Application* 
- *Android ROOM* library to store complete data
- *Android ROOM* library for MySQL database integration 
- Complete high quality well documented code
- Complete UML class diagrams
~~~


~~~
{}{raw}

<table>
<tr>
	<td> <img src="./figures/JetRed_home.jpg" alt="JetReddit Application" width="250" height="400"> </td>
	<td> <img src="./figures/JetRed_home2.jpg" alt="JetReddit Application" width="250" height="400"> </td>
	<td> <img src="./figures/JetRed_Scaffold.jpg" alt="JetReddit Application" width="250" height="400"> </td>
</tr>
<tr>
	<td> <img src="./figures/JetRed_new.jpg" alt="JetReddit Application" width="250" height="400" > </td>
	<td> <img src="./figures/JetRed_subreddits.jpg" alt="JetReddit Application" width="250" height="400"> </td>
	<td> <img src="./figures/JetRed_chat.jpg" alt="JetReddit Application" width="250" height="400"> </td>
</tr>
</table>

~~~





== Android Jetpack Compose and Kotlin Projects - Native Android Development 

~~~
{}{img_left}{./figures/And_Books.png}{alt text}{750px}{370px}{}
*Android Native Application Development.*\n\n 
*Advanced Android Application Architecture - Using Jetpack Compose.*\n\n
*Saving Data on Android - Data Storage using Android Native Application.*
~~~


~~~
{Kotlin Development - Kotlin CoRoutines - Android}{}
~~~
~~~
{}{img_left}{./figures/Kot_Books.png}{alt text}{500px}{370px}{}
*Kotlin Development - Android Native Application Development.*\n 
*Kotlin Programming using Coroutines - Android Native Application Development.*\n 
~~~



~~~
{Service-Oriented Robotic Simulation Implementation.}{}
~~~
~~~
{}{img_left}{./figures/phd_robotics.jpg}{alt text}{500px}{900px}{}
*Service-Oriented Robotic Simulation Implementation.*\n\n 
*(August 2008 - February 2010) - ENSIBS + Lab VALORIA UBS FRANCE)*\n
- Robotics Studio allows developers to develop robotic applications which manage the sensors, actuators, and
the behavior of robots in their environment. The same application code is used both in the simulated robots
in a simulation environment and in real robots in real world environment. It has a Service-Oriented Architecture
(SOA), with services being designed and developed by Visual Programming Language (VPL) and direct
Visual C# programming.\n 
*Project description:*\n 
- This project develops robotic simulation agents in Robotics Studio.
- The application developed consists of the core specifications, these core specifications were developed by
following the Gaia multi-agent method.
- There were several extensions developed of these specifications.
- It manages the transport of goods between multiple warehouses in a closed environment. 
- The entities are mobile carrier agents, the loader/un-loader agents that load/un-load goods at warehouses.
- The environment consists of the route (with its topology) and the goods to transport.
- The mission consists of transporting all or a part of goods from one source (warehouse) towards a destination (warehouse).
- The carrier agents discover the route topology and must construct and follow a route to reach their destination.
- The project extensions implement the simulation scenarios, and then thus validate the specifications.
~~~

~~~
{}{img_left}{./figures/phd_robotics_sim.jpg}{alt text}{500px}{900px}{}
The extensions are:
-- The scalability of the number of carrier agents. We started from a static solution where we knew the number
of carrier agents at start, to a dynamic solution which allows the dynamic addition and removal of carrier agents
either with the help of a supervisor (HMI), or with the help of a service that allows the adaptation of the
number of carrier agents.
-- The evolution of the route. We passed from a solution where the topology of the route is known at the
beginning to a solution where the topology of the route evolves dynamically with the help of addition/deletion
of discrete portions of route with the help of a supervisor service.
-- The evolution of the number of the warehouses and mission. We pass from a solution where the number of
warehouses are static (i.e. known in advance) and the mission consists of transporting a part or all the goods
from one warehouse to another warehouse, to a solution which allows to introduce new warehouses
(placed at different portions of route via a supervisor service) and modification of carrier agent missions
to assure an equilibrium between the warehouses (i.e. our goal is the same quantity of goods in each warehouse)
-- The proposition of a strategy for the resolution of collisions between carrier agents.
~~~


~~~
{Approach for the formal specification and verification of multi-agent robotic systems.}{}
~~~
~~~
{}{img_left}{./figures/phd_domain.jpg}{alt text}{600px}{350px}{}
*Approach for the formal specification and verification of multi-agent robotic systems.*\n\n 
*(PhD Project - July 2007 - September 2010 - Lab VALORIA UBS FRANCE)*\n
~~~

~~~
{}{img_left}{./figures/phd_contributions.jpg}{alt text}{800px}{480px}{}
~~~

~~~
{}{img_left}{./figures/phd_mas.jpg}{alt text}{700px}{420px}{}
- We have proposed a development approach based on a combination of methods and techniques that allow 
for formal verification and evaluation during specification definition and that is also flexible.
~~~

~~~
{}{img_left}{./figures/phd_formal.jpg}{alt text}{700px}{420px}{}
- We have analyzed the development process of a robotic multi-agent system after classifying it in the
major phases of /requirement specifications/, /verification specifications/, /architecture specifications/, 
and /implementation/.
~~~


~~~
{An Architecture for Secure Video Streaming in Multicast environment.}{}
~~~
~~~
{}{img_left}{./figures/deep_learning.jpg}{alt text}{500px}{250px}{}
*An Architecture for Secure Video Streaming in Multicast environment* \n\n 
*(The Islamia University of Bahawalpur - 2012)*\n 
~~~


~~~
{Design and development of a formal multi-agent information management system.}{}
~~~
~~~
{}{img_left}{./figures/5G.png}{alt text}{500px}{350px}{}
*Design and development of a formal multi-agent information management system.*\n\n
*HEC Grant 0.5 Million - Duration 10 months - (November - 2012)* \n
. Application of formal methods for the development of multi-agent based information management system
. Design and development of a formal architecture for the Information management system
. Implementation of this Information management system by using a multi-agent framework
. The use of free open source multi-agent platform and softwares.
~~~


~~~
{Luddo 3D - Design and development of 3D Ludo gameLuddo 3D - Design and development of 3D Ludo game.}{}
~~~
~~~
{}{img_left}{./figures/luddo_3d.jpg}{alt text}{400px}{550px}{}
*Luddo 3D - Design and development of 3D Ludo gameLuddo 3D - Design and development of 3D Ludo game.*\n\n
*(August - 2013)* \n
- Luddo is very popular game in Pakistan. Internationally and nationally people play this game for entertainment.
Usually a square board, dice and some tokens are used in order to play this game.
- We proposed an electronic version of the game in order to modernize the experience of playing Luddo game
in computers and smart phones. Four, three, or two players can play this game at a time.
- We have proposed a single player gaming experience also; developed the electronic game and added
functionality of playing game with the computer player;
- Moreover we have developed a Luddo game in a 3-Dimensional graphic environment using a 3D-graphics engine.
- We are the first team to developed this 3D-Luddo game across the world.
~~~


~~~
~~~

